[
    {
        "id": "a043bda586625b82",
        "type": "aedes broker",
        "z": "2413017db2cc8644",
        "name": "",
        "mqtt_port": "1883",
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 130,
        "y": 40,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f4e38d51a1a0e6f4",
        "type": "mqtt in",
        "z": "2413017db2cc8644",
        "name": "",
        "topic": "esp32/humidity",
        "qos": "2",
        "datatype": "auto",
        "broker": "6c38adbc301341f7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 620,
        "y": 1180,
        "wires": [
            [
                "666f4ce94dcdb57f",
                "804d53bfdc4b00ea"
            ]
        ]
    },
    {
        "id": "29c9b51d8fc5ce0e",
        "type": "mqtt in",
        "z": "2413017db2cc8644",
        "name": "",
        "topic": "esp32/waterLevel",
        "qos": "2",
        "datatype": "auto",
        "broker": "6c38adbc301341f7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 620,
        "y": 1500,
        "wires": [
            [
                "a64589951348820e",
                "0a3a6a8058e7acdd"
            ]
        ]
    },
    {
        "id": "0c2ccb6d4c5adb92",
        "type": "mqtt in",
        "z": "2413017db2cc8644",
        "name": "",
        "topic": "esp32/soilMoisture",
        "qos": "2",
        "datatype": "auto",
        "broker": "6c38adbc301341f7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 630,
        "y": 1800,
        "wires": [
            [
                "59f95dc94edbed77",
                "69a691481a2dac28"
            ]
        ]
    },
    {
        "id": "3b7f621b2711ef79",
        "type": "influxdb out",
        "z": "2413017db2cc8644",
        "influxdb": "ec0239a13d7cba62",
        "name": "Humidity Write",
        "measurement": "humidity",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "iot_project",
        "x": 1440,
        "y": 1160,
        "wires": []
    },
    {
        "id": "bce40af30815792f",
        "type": "change",
        "z": "2413017db2cc8644",
        "name": "Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.internal",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 1160,
        "wires": [
            [
                "3b7f621b2711ef79"
            ]
        ]
    },
    {
        "id": "a4599f0591abac0b",
        "type": "comment",
        "z": "2413017db2cc8644",
        "name": "Light (IL_value/ OL_value)",
        "info": "",
        "x": 650,
        "y": 660,
        "wires": []
    },
    {
        "id": "d5c927818044fee5",
        "type": "comment",
        "z": "2413017db2cc8644",
        "name": "Temperature (IT_value/ OT_value)",
        "info": "",
        "x": 680,
        "y": 180,
        "wires": []
    },
    {
        "id": "e22190e9786a7f85",
        "type": "comment",
        "z": "2413017db2cc8644",
        "name": "Humidity (value)",
        "info": "",
        "x": 620,
        "y": 1100,
        "wires": []
    },
    {
        "id": "132ddd61f058aae8",
        "type": "influxdb out",
        "z": "2413017db2cc8644",
        "influxdb": "ec0239a13d7cba62",
        "name": "Water Level Write",
        "measurement": "waterLevel",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "iot_project",
        "x": 1450,
        "y": 1480,
        "wires": []
    },
    {
        "id": "30021da2147012a3",
        "type": "change",
        "z": "2413017db2cc8644",
        "name": "Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.tank",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 1480,
        "wires": [
            [
                "132ddd61f058aae8"
            ]
        ]
    },
    {
        "id": "a64589951348820e",
        "type": "function",
        "z": "2413017db2cc8644",
        "name": "Convert to Float",
        "func": "msg.value = parseFloat(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1500,
        "wires": [
            [
                "30021da2147012a3"
            ]
        ]
    },
    {
        "id": "b9efbc6a3c0bad90",
        "type": "comment",
        "z": "2413017db2cc8644",
        "name": "Water Level (value)",
        "info": "",
        "x": 630,
        "y": 1420,
        "wires": []
    },
    {
        "id": "bc16ecdca1c1fa58",
        "type": "influxdb out",
        "z": "2413017db2cc8644",
        "influxdb": "ec0239a13d7cba62",
        "name": "Moisture Write",
        "measurement": "moisture",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "iot_project",
        "x": 1440,
        "y": 1780,
        "wires": []
    },
    {
        "id": "dbbc554018e8347c",
        "type": "change",
        "z": "2413017db2cc8644",
        "name": "Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.soil",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 1780,
        "wires": [
            [
                "bc16ecdca1c1fa58"
            ]
        ]
    },
    {
        "id": "4eda72322746e1ef",
        "type": "comment",
        "z": "2413017db2cc8644",
        "name": "Soil Moisture (value)",
        "info": "",
        "x": 630,
        "y": 1720,
        "wires": []
    },
    {
        "id": "59f95dc94edbed77",
        "type": "function",
        "z": "2413017db2cc8644",
        "name": "Convert to Int",
        "func": "msg.value = parseInt(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1800,
        "wires": [
            [
                "dbbc554018e8347c"
            ]
        ]
    },
    {
        "id": "666f4ce94dcdb57f",
        "type": "function",
        "z": "2413017db2cc8644",
        "name": "Convert to Int",
        "func": "msg.value = parseInt(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1180,
        "wires": [
            [
                "bce40af30815792f"
            ]
        ]
    },
    {
        "id": "8296bd2ed5626a12",
        "type": "inject",
        "z": "2413017db2cc8644",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "IT_330",
        "payloadType": "str",
        "x": 590,
        "y": 2500,
        "wires": [
            [
                "0650895e2af1827a"
            ]
        ]
    },
    {
        "id": "0650895e2af1827a",
        "type": "function",
        "z": "2413017db2cc8644",
        "name": "",
        "func": "let input = msg.payload.split(\"_\");\nmsg.type = input[0];\nmsg.value = input[1];\nconsole.log(msg.type);\n\n// sidebar.debug(\"Log message\");\nnode.warn([\"your_variable=\"]);\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a63db33bcf45b045",
        "type": "comment",
        "z": "2413017db2cc8644",
        "name": "test",
        "info": "",
        "x": 590,
        "y": 2440,
        "wires": []
    },
    {
        "id": "e6192d4ac49f9feb",
        "type": "mqtt out",
        "z": "2413017db2cc8644",
        "name": "",
        "topic": "esp32/valve",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6c38adbc301341f7",
        "x": 930,
        "y": 2800,
        "wires": []
    },
    {
        "id": "bf01c47274449929",
        "type": "mqtt out",
        "z": "2413017db2cc8644",
        "name": "",
        "topic": "esp32/fan_hot",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6c38adbc301341f7",
        "x": 1180,
        "y": 3180,
        "wires": []
    },
    {
        "id": "0e89151489d0ca2e",
        "type": "function",
        "z": "2413017db2cc8644",
        "name": "Create message",
        "func": "msg.type = \"HOT\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 3180,
        "wires": [
            [
                "bf01c47274449929"
            ]
        ]
    },
    {
        "id": "e2e45424770ee288",
        "type": "function",
        "z": "2413017db2cc8644",
        "name": "Create message",
        "func": "msg.type = \"COLD\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 3260,
        "wires": [
            [
                "1c40e7ee624fad25"
            ]
        ]
    },
    {
        "id": "3feb6159b2abfd4a",
        "type": "comment",
        "z": "2413017db2cc8644",
        "name": "Control Fans",
        "info": "",
        "x": 610,
        "y": 3100,
        "wires": []
    },
    {
        "id": "f8dcf69177447079",
        "type": "mqtt out",
        "z": "2413017db2cc8644",
        "name": "",
        "topic": "esp32/shutter",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6c38adbc301341f7",
        "x": 940,
        "y": 3020,
        "wires": []
    },
    {
        "id": "28746c46ea0c7c7b",
        "type": "comment",
        "z": "2413017db2cc8644",
        "name": "Control Shutter",
        "info": "",
        "x": 620,
        "y": 2880,
        "wires": []
    },
    {
        "id": "c654109a9169253a",
        "type": "comment",
        "z": "2413017db2cc8644",
        "name": "Control Water Valve",
        "info": "",
        "x": 630,
        "y": 2720,
        "wires": []
    },
    {
        "id": "3f93347b04a236f2",
        "type": "comment",
        "z": "2413017db2cc8644",
        "name": "Transmit Section",
        "info": "",
        "x": 440,
        "y": 2340,
        "wires": []
    },
    {
        "id": "fdfe61bbdf9f40f5",
        "type": "comment",
        "z": "2413017db2cc8644",
        "name": "Receive Section",
        "info": "",
        "x": 440,
        "y": 100,
        "wires": []
    },
    {
        "id": "c5c2291fa686c382",
        "type": "mqtt in",
        "z": "2413017db2cc8644",
        "name": "",
        "topic": "esp32/events",
        "qos": "2",
        "datatype": "auto",
        "broker": "6c38adbc301341f7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 610,
        "y": 2260,
        "wires": [
            [
                "699ba5a5d3f15d98"
            ]
        ]
    },
    {
        "id": "9f7c2b271c5323f4",
        "type": "influxdb out",
        "z": "2413017db2cc8644",
        "influxdb": "ec0239a13d7cba62",
        "name": "Irrigation Event Write",
        "measurement": "irrigation",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "iot_project",
        "x": 1740,
        "y": 2140,
        "wires": []
    },
    {
        "id": "69bb1878ea6a4cd6",
        "type": "change",
        "z": "2413017db2cc8644",
        "name": "Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.state",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 2140,
        "wires": [
            [
                "9f7c2b271c5323f4"
            ]
        ]
    },
    {
        "id": "3ff4e9120c5b80ec",
        "type": "comment",
        "z": "2413017db2cc8644",
        "name": "Events",
        "info": "",
        "x": 590,
        "y": 2040,
        "wires": []
    },
    {
        "id": "699ba5a5d3f15d98",
        "type": "switch",
        "z": "2413017db2cc8644",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Irrigation",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "No-Irrigation",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Cooling",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Heating",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "No-AC",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Moving_to_the_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Moving_to_the_Middle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Moving_to_the_End",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Still_at_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Still_at_Middle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Still_at_End",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Tank_Filling",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Tank_Stop_Filling",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Humidification",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "DeHumidification",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "No_Action",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 16,
        "x": 910,
        "y": 2260,
        "wires": [
            [
                "7867c196707d9883",
                "4ba71e231aeb80d9"
            ],
            [
                "7867c196707d9883",
                "4ba71e231aeb80d9"
            ],
            [
                "6389bf82110cfd1b",
                "d1cce43ebeb3c839"
            ],
            [
                "6389bf82110cfd1b",
                "d1cce43ebeb3c839"
            ],
            [
                "6389bf82110cfd1b",
                "d1cce43ebeb3c839"
            ],
            [
                "3c08cd80773f61cb",
                "97672a4eb7f60ae6"
            ],
            [
                "3c08cd80773f61cb",
                "97672a4eb7f60ae6"
            ],
            [
                "3c08cd80773f61cb",
                "97672a4eb7f60ae6"
            ],
            [
                "3c08cd80773f61cb",
                "97672a4eb7f60ae6"
            ],
            [
                "3c08cd80773f61cb",
                "97672a4eb7f60ae6"
            ],
            [
                "3c08cd80773f61cb",
                "97672a4eb7f60ae6"
            ],
            [
                "06888346cda81745",
                "75fba3945770c57b"
            ],
            [
                "06888346cda81745",
                "75fba3945770c57b"
            ],
            [
                "c20bec3b569b907a",
                "1545b133ca8c987c"
            ],
            [
                "c20bec3b569b907a",
                "1545b133ca8c987c"
            ],
            [
                "c20bec3b569b907a",
                "1545b133ca8c987c"
            ]
        ]
    },
    {
        "id": "7867c196707d9883",
        "type": "function",
        "z": "2413017db2cc8644",
        "name": "Irrigation values added (0/1)",
        "func": "if(msg.payload == \"IRRIGATION\"){\n    msg.value = 1;\n    msg.dpMessage = \"Irrigation ON\";\n}else{\n    msg.value = 0;\n    msg.dpMessage = \"Irrigation OFF\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 2140,
        "wires": [
            [
                "69bb1878ea6a4cd6"
            ]
        ]
    },
    {
        "id": "6389bf82110cfd1b",
        "type": "function",
        "z": "2413017db2cc8644",
        "name": "Air Conditioning values (0/1/2)",
        "func": "if(msg.payload == \"No-AC\"){\n    msg.value = 0;\n    msg.dpMessage = \"No Air Conditioning\";\n}else if (msg.payload == \"COOLING\"){\n    msg.value = 1;\n    msg.dpMessage = \"Cold Air Conditioning\";    \n}else{\n    msg.value = 2;\n    msg.dpMessage = \"HOT Air Conditioning\";    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 2220,
        "wires": [
            [
                "a578ac6820dd4826"
            ]
        ]
    },
    {
        "id": "48306017b9872093",
        "type": "influxdb out",
        "z": "2413017db2cc8644",
        "influxdb": "ec0239a13d7cba62",
        "name": "Air conditioning Event Write",
        "measurement": "airConditioning",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "iot_project",
        "x": 1760,
        "y": 2220,
        "wires": []
    },
    {
        "id": "a578ac6820dd4826",
        "type": "change",
        "z": "2413017db2cc8644",
        "name": "Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.type",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 2220,
        "wires": [
            [
                "48306017b9872093"
            ]
        ]
    },
    {
        "id": "4ba71e231aeb80d9",
        "type": "ui_text",
        "z": "2413017db2cc8644",
        "group": "d8807c8f558ef194",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Irrigation State",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1180,
        "y": 2100,
        "wires": []
    },
    {
        "id": "d1cce43ebeb3c839",
        "type": "ui_text",
        "z": "2413017db2cc8644",
        "group": "d8807c8f558ef194",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Air Condition State",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1190,
        "y": 2180,
        "wires": []
    },
    {
        "id": "804d53bfdc4b00ea",
        "type": "ui_text",
        "z": "2413017db2cc8644",
        "group": "5407e25db07d8203",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Internal Humidity ",
        "format": "{{msg.payload + \" %\"}}",
        "layout": "row-spread",
        "className": "humidity",
        "x": 950,
        "y": 1220,
        "wires": []
    },
    {
        "id": "0a3a6a8058e7acdd",
        "type": "ui_text",
        "z": "2413017db2cc8644",
        "group": "5407e25db07d8203",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Water Level (ml)",
        "format": "{{msg.payload + \" ml\"}}",
        "layout": "row-spread",
        "className": "tank",
        "x": 940,
        "y": 1540,
        "wires": []
    },
    {
        "id": "69a691481a2dac28",
        "type": "ui_text",
        "z": "2413017db2cc8644",
        "group": "5407e25db07d8203",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Soil Moisture (%)",
        "format": "{{msg.payload + \" %\"}}",
        "layout": "row-spread",
        "className": "soil",
        "x": 950,
        "y": 1840,
        "wires": []
    },
    {
        "id": "3c08cd80773f61cb",
        "type": "function",
        "z": "2413017db2cc8644",
        "name": "Shutter (0/1/2)",
        "func": "/*\n(Moves)\nM_S (Fully open)\nM_M (Partially open)\nM_E (Fully close)\n\n(Stoped)\nS_S (Fully open)\nS_M (Partially open)\nS_E (Fully close)\n*/\n\nif(msg.payload == \"Moving_to_the_Start\"){\n    msg.state = 2;\n}else if(msg.payload == \"Moving_to_the_Middle\"){\n    msg.state = 1;\n}else if (msg.payload == \"Moving_to_the_End\"){\n    msg.state = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 2260,
        "wires": [
            [
                "8764294fc374fe15"
            ]
        ]
    },
    {
        "id": "06888346cda81745",
        "type": "function",
        "z": "2413017db2cc8644",
        "name": "Tank (0/1)",
        "func": "/*\nT_F (Tank Filling)\nT_NF (Tank Filling Stopped)\n*/\n\nif(msg.payload == \"T_F\"){\n    msg.display = \"Tank Filling\";\n    msg.value = 1;\n}else{\n    msg.display = \"Tank Filling Stopped\";\n    msg.value = 0;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 2340,
        "wires": [
            [
                "9d4462848691f765"
            ]
        ]
    },
    {
        "id": "97672a4eb7f60ae6",
        "type": "ui_text",
        "z": "2413017db2cc8644",
        "group": "d8807c8f558ef194",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Shutter State",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1170,
        "y": 2300,
        "wires": []
    },
    {
        "id": "8764294fc374fe15",
        "type": "change",
        "z": "2413017db2cc8644",
        "name": "Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.state",
                "pt": "msg",
                "to": "position",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 2260,
        "wires": [
            [
                "4e1f15d6bca5bcdd"
            ]
        ]
    },
    {
        "id": "9d4462848691f765",
        "type": "change",
        "z": "2413017db2cc8644",
        "name": "Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.state",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 2340,
        "wires": [
            [
                "57e4f65e2c9b8790"
            ]
        ]
    },
    {
        "id": "75fba3945770c57b",
        "type": "ui_text",
        "z": "2413017db2cc8644",
        "group": "d8807c8f558ef194",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Tank State",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1170,
        "y": 2380,
        "wires": []
    },
    {
        "id": "4e1f15d6bca5bcdd",
        "type": "influxdb out",
        "z": "2413017db2cc8644",
        "influxdb": "ec0239a13d7cba62",
        "name": "Shutter State Event Write",
        "measurement": "Shutter",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "iot_project",
        "x": 1750,
        "y": 2260,
        "wires": []
    },
    {
        "id": "57e4f65e2c9b8790",
        "type": "influxdb out",
        "z": "2413017db2cc8644",
        "influxdb": "ec0239a13d7cba62",
        "name": "Tank State Event Write",
        "measurement": "tankFilling",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "iot_project",
        "x": 1740,
        "y": 2340,
        "wires": []
    },
    {
        "id": "0b9a839b3502b44e",
        "type": "ui_switch",
        "z": "2413017db2cc8644",
        "name": "",
        "label": "Cold Fan (OFF/ON)",
        "tooltip": "",
        "group": "d8807c8f558ef194",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "state",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 630,
        "y": 3260,
        "wires": [
            [
                "e2e45424770ee288"
            ]
        ]
    },
    {
        "id": "d0559d5603252f22",
        "type": "ui_switch",
        "z": "2413017db2cc8644",
        "name": "",
        "label": "Hot Fan (OFF/ON)",
        "tooltip": "",
        "group": "d8807c8f558ef194",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "state",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 630,
        "y": 3180,
        "wires": [
            [
                "0e89151489d0ca2e"
            ]
        ]
    },
    {
        "id": "ccc5c04b92c44662",
        "type": "ui_switch",
        "z": "2413017db2cc8644",
        "name": "",
        "label": "Water Valve (OFF/ON)",
        "tooltip": "",
        "group": "d8807c8f558ef194",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 640,
        "y": 2800,
        "wires": [
            [
                "e6192d4ac49f9feb"
            ]
        ]
    },
    {
        "id": "23d06948444cad02",
        "type": "ui_template",
        "z": "2413017db2cc8644",
        "group": "d8807c8f558ef194",
        "name": "",
        "order": 12,
        "width": 0,
        "height": 0,
        "format": "<style>\n.nr-dashboard-cardtitle{\n    text-align: center;\n    text-decoration: underline;\n    font-size: 30px !important;\n    font-weight: bold !important;\n}\n.mTitle{\n    text-decoration: underline;\n    font-size: 30px !important;\n    font-weight: bold !important;\n    color: #1bbfff;\n}\n\n.temp{\n    background-color: #c3eeff !important;\n}\n\n.light{\n    \n}\n\n.humidity{\n    background-color: #c3eeff !important;\n}\n\n.tank{\n    \n}\n\n.soil{\n    background-color: #c3eeff !important;\n}\n\n.mode{\n    background-color: #c3eeff !important;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 200,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "0cbdfc94e2eea591",
        "type": "ui_text",
        "z": "2413017db2cc8644",
        "group": "d8807c8f558ef194",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "<p class=\"mTitle\">Events</p>",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 810,
        "y": 2040,
        "wires": []
    },
    {
        "id": "a2bc3e857652e244",
        "type": "change",
        "z": "2413017db2cc8644",
        "name": "External Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.external",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 400,
        "wires": [
            [
                "8b0ac9669d15e443"
            ]
        ]
    },
    {
        "id": "2da8e3d7a5debc05",
        "type": "function",
        "z": "2413017db2cc8644",
        "name": "Convert To Float ",
        "func": "// IT_30\n// OT_27\nnode.warn([\"incoming message temp\"]);\nnode.warn([msg.payload]);\nmsg.value = parseFloat(msg.payload);\nnode.warn([\"Converted to Float\"]);\nnode.warn([msg.value]);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 420,
        "wires": [
            [
                "a2bc3e857652e244"
            ]
        ]
    },
    {
        "id": "af027c49c748cfb8",
        "type": "mqtt in",
        "z": "2413017db2cc8644",
        "name": "",
        "topic": "esp32/temperatureOUT",
        "qos": "2",
        "datatype": "auto",
        "broker": "6c38adbc301341f7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 640,
        "y": 420,
        "wires": [
            [
                "2da8e3d7a5debc05",
                "2a24b8111f0226db"
            ]
        ]
    },
    {
        "id": "2a24b8111f0226db",
        "type": "ui_text",
        "z": "2413017db2cc8644",
        "group": "5407e25db07d8203",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "External Temperature (C)",
        "format": "{{msg.payload + \" °C\"}}",
        "layout": "row-spread",
        "className": "temp",
        "x": 970,
        "y": 460,
        "wires": []
    },
    {
        "id": "8b0ac9669d15e443",
        "type": "influxdb out",
        "z": "2413017db2cc8644",
        "influxdb": "ec0239a13d7cba62",
        "name": "Temperature Out Write",
        "measurement": "temperature",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "iot_project",
        "x": 1460,
        "y": 400,
        "wires": []
    },
    {
        "id": "947cee09ca0b8e2f",
        "type": "change",
        "z": "2413017db2cc8644",
        "name": "Internal Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.internal",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 240,
        "wires": [
            [
                "1c1ad18367aa242e"
            ]
        ]
    },
    {
        "id": "c4b3604c2d1df281",
        "type": "function",
        "z": "2413017db2cc8644",
        "name": "Convert To Float",
        "func": "// IT_30\n// OT_27\nnode.warn([\"incoming message temp\"]);\nnode.warn([msg.payload]);\n\nmsg.value = parseFloat(msg.payload);\n\nnode.warn([\"Converted to Float\"]);\nnode.warn([msg.value]);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 260,
        "wires": [
            [
                "947cee09ca0b8e2f"
            ]
        ]
    },
    {
        "id": "5dc2384aa32c6d58",
        "type": "mqtt in",
        "z": "2413017db2cc8644",
        "name": "",
        "topic": "esp32/temperatureIN",
        "qos": "2",
        "datatype": "auto",
        "broker": "6c38adbc301341f7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 640,
        "y": 260,
        "wires": [
            [
                "c4b3604c2d1df281",
                "b2ae9841a910fc34"
            ]
        ]
    },
    {
        "id": "1c1ad18367aa242e",
        "type": "influxdb out",
        "z": "2413017db2cc8644",
        "influxdb": "ec0239a13d7cba62",
        "name": "Temperature In Write",
        "measurement": "temperature",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "iot_project",
        "x": 1460,
        "y": 240,
        "wires": []
    },
    {
        "id": "b2ae9841a910fc34",
        "type": "ui_text",
        "z": "2413017db2cc8644",
        "group": "5407e25db07d8203",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Internal Temperature (C)",
        "format": "{{msg.payload + \" °C\"}}",
        "layout": "row-spread",
        "className": "temp",
        "x": 970,
        "y": 300,
        "wires": []
    },
    {
        "id": "7673ec2f42543f28",
        "type": "change",
        "z": "2413017db2cc8644",
        "name": "External Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.external",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 880,
        "wires": [
            [
                "45f6b69bf178b540"
            ]
        ]
    },
    {
        "id": "bb6dbd050cf979bd",
        "type": "function",
        "z": "2413017db2cc8644",
        "name": "Convert To Int ",
        "func": "// IT_30\n// OT_27\nnode.warn([\"incoming message light\"]);\nnode.warn([msg.payload]);\nmsg.value = parseInt(msg.payload);\nnode.warn([\"Converted to Float\"]);\nnode.warn([msg.value]);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 900,
        "wires": [
            [
                "7673ec2f42543f28"
            ]
        ]
    },
    {
        "id": "3130791b3e0082b7",
        "type": "mqtt in",
        "z": "2413017db2cc8644",
        "name": "",
        "topic": "esp32/lightOUT",
        "qos": "2",
        "datatype": "auto",
        "broker": "6c38adbc301341f7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 620,
        "y": 900,
        "wires": [
            [
                "bb6dbd050cf979bd",
                "b9cca0a4cb5534f9"
            ]
        ]
    },
    {
        "id": "b9cca0a4cb5534f9",
        "type": "ui_text",
        "z": "2413017db2cc8644",
        "group": "5407e25db07d8203",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "External  Light Intensity ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "light",
        "x": 960,
        "y": 940,
        "wires": []
    },
    {
        "id": "45f6b69bf178b540",
        "type": "influxdb out",
        "z": "2413017db2cc8644",
        "influxdb": "ec0239a13d7cba62",
        "name": "Light Out Write",
        "measurement": "light",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "iot_project",
        "x": 1440,
        "y": 880,
        "wires": []
    },
    {
        "id": "950934074e95d21c",
        "type": "change",
        "z": "2413017db2cc8644",
        "name": "Internal Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.internal",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 720,
        "wires": [
            [
                "87b155c2041f1ee2"
            ]
        ]
    },
    {
        "id": "8d179797ebd8791f",
        "type": "function",
        "z": "2413017db2cc8644",
        "name": "Convert To Int ",
        "func": "// IT_30\n// OT_27\nnode.warn([\"incoming message light\"]);\nnode.warn([msg.payload]);\n\nmsg.value = parseInt(msg.payload);\n\nnode.warn([\"Converted to Int\"]);\nnode.warn([msg.value]);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 740,
        "wires": [
            [
                "950934074e95d21c"
            ]
        ]
    },
    {
        "id": "b5ae44de960d6ad0",
        "type": "mqtt in",
        "z": "2413017db2cc8644",
        "name": "",
        "topic": "esp32/lightIN",
        "qos": "2",
        "datatype": "auto",
        "broker": "6c38adbc301341f7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 610,
        "y": 740,
        "wires": [
            [
                "8d179797ebd8791f",
                "d45a6dbd880f3bf9"
            ]
        ]
    },
    {
        "id": "87b155c2041f1ee2",
        "type": "influxdb out",
        "z": "2413017db2cc8644",
        "influxdb": "ec0239a13d7cba62",
        "name": "Light In Write",
        "measurement": "light",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "iot_project",
        "x": 1430,
        "y": 720,
        "wires": []
    },
    {
        "id": "d45a6dbd880f3bf9",
        "type": "ui_text",
        "z": "2413017db2cc8644",
        "group": "5407e25db07d8203",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Internal Light Intensity",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "light",
        "x": 960,
        "y": 780,
        "wires": []
    },
    {
        "id": "c20bec3b569b907a",
        "type": "function",
        "z": "2413017db2cc8644",
        "name": "Humidification/DeHumidification (0/1/2)",
        "func": "/*\nT_F (Tank Filling)\nT_NF (Tank Filling Stopped)\n*/\nnode.warn([msg.payload]);\nif(msg.payload == \"DeHumidification\"){\n    msg.value = 2;\n}else if(msg.payload == \"Humidification\"){\n    msg.value = 1;\n}else {\n    msg.value = 0;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "1545b133ca8c987c",
        "type": "ui_text",
        "z": "2413017db2cc8644",
        "group": "d8807c8f558ef194",
        "order": 13,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Humidification/DeHumidification",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1230,
        "y": 2460,
        "wires": []
    },
    {
        "id": "d89c8783e048ac78",
        "type": "ui_multistate_switch",
        "z": "2413017db2cc8644",
        "name": "",
        "group": "d8807c8f558ef194",
        "order": 6,
        "width": "0",
        "height": "0",
        "label": "",
        "stateField": "payload",
        "enableField": "enable",
        "passthroughField": "passthrough",
        "inputMsgField": "inputmsg",
        "rounded": true,
        "useThemeColors": true,
        "hideSelectedLabel": false,
        "multilineLabel": true,
        "passThrough": "never",
        "inputMsg": "all",
        "userInput": "enabled_show",
        "options": [
            {
                "label": "F_Open",
                "value": "2",
                "valueType": "num",
                "color": "#ff6666"
            },
            {
                "label": "P_Open",
                "value": "1",
                "valueType": "num",
                "color": "#999999"
            },
            {
                "label": "Closed",
                "value": "0",
                "valueType": "num",
                "color": "#009933"
            }
        ],
        "topic": "",
        "x": 620,
        "y": 3020,
        "wires": [
            [
                "f8dcf69177447079"
            ]
        ]
    },
    {
        "id": "cd12230e4d6da77a",
        "type": "ui_text",
        "z": "2413017db2cc8644",
        "group": "d8807c8f558ef194",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Shutter Position",
        "format": "",
        "layout": "col-center",
        "className": "controlTitle",
        "x": 620,
        "y": 2960,
        "wires": []
    },
    {
        "id": "1c40e7ee624fad25",
        "type": "mqtt out",
        "z": "2413017db2cc8644",
        "name": "",
        "topic": "esp32/fan_cold",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6c38adbc301341f7",
        "x": 1180,
        "y": 3260,
        "wires": []
    },
    {
        "id": "5110d3a3bcbe26a5",
        "type": "mqtt out",
        "z": "2413017db2cc8644",
        "name": "",
        "topic": "esp32/automaticMode",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6c38adbc301341f7",
        "x": 960,
        "y": 2660,
        "wires": []
    },
    {
        "id": "ccf9d7ff410e0650",
        "type": "comment",
        "z": "2413017db2cc8644",
        "name": "Control Automatic mode",
        "info": "",
        "x": 640,
        "y": 2580,
        "wires": []
    },
    {
        "id": "86dbecfe09b47b8b",
        "type": "ui_switch",
        "z": "2413017db2cc8644",
        "name": "",
        "label": "Automatic mode (OFF/ON)",
        "tooltip": "",
        "group": "d8807c8f558ef194",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "mode",
        "x": 660,
        "y": 2660,
        "wires": [
            [
                "5110d3a3bcbe26a5"
            ]
        ]
    },
    {
        "id": "6c38adbc301341f7",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ec0239a13d7cba62",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "IOT_DB",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://influxdb:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "d8807c8f558ef194",
        "type": "ui_group",
        "name": "Controls",
        "tab": "89d4041f7249bf8c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ".nr-dashboard-cardtitle {   background-color: black; }"
    },
    {
        "id": "5407e25db07d8203",
        "type": "ui_group",
        "name": "Metrics",
        "tab": "89d4041f7249bf8c",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "89d4041f7249bf8c",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]