[
    {
        "id": "80b21b217051be32",
        "type": "aedes broker",
        "z": "4acf5ea72f144f4b",
        "name": "",
        "mqtt_port": "1883",
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 110,
        "y": 40,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "0bab9a42a8526460",
        "type": "mqtt in",
        "z": "4acf5ea72f144f4b",
        "name": "",
        "topic": "esp32/humidity",
        "qos": "2",
        "datatype": "auto",
        "broker": "6c38adbc301341f7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 600,
        "y": 1120,
        "wires": [
            [
                "fe45da32247bdc93",
                "bd6e62d8c41c8359"
            ]
        ]
    },
    {
        "id": "55cb8add2f608f3c",
        "type": "mqtt in",
        "z": "4acf5ea72f144f4b",
        "name": "",
        "topic": "esp32/waterLevel",
        "qos": "2",
        "datatype": "auto",
        "broker": "6c38adbc301341f7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 600,
        "y": 1360,
        "wires": [
            [
                "406f7a4e053a5865",
                "1a5159c29b87eff3"
            ]
        ]
    },
    {
        "id": "13ef558c5d12a71e",
        "type": "mqtt in",
        "z": "4acf5ea72f144f4b",
        "name": "",
        "topic": "esp32/soilMoisture",
        "qos": "2",
        "datatype": "auto",
        "broker": "6c38adbc301341f7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 610,
        "y": 1600,
        "wires": [
            [
                "f3e9a2cca45b1917",
                "7382c6189c5b2441"
            ]
        ]
    },
    {
        "id": "8b1aba12f33c20cc",
        "type": "influxdb out",
        "z": "4acf5ea72f144f4b",
        "influxdb": "ec0239a13d7cba62",
        "name": "Humidity Write",
        "measurement": "humidity",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "test",
        "x": 1420,
        "y": 1100,
        "wires": []
    },
    {
        "id": "2f1831aefa05c7c2",
        "type": "change",
        "z": "4acf5ea72f144f4b",
        "name": "Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.internal",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 1100,
        "wires": [
            [
                "8b1aba12f33c20cc"
            ]
        ]
    },
    {
        "id": "a2b25658e6a463b6",
        "type": "comment",
        "z": "4acf5ea72f144f4b",
        "name": "Light (IL_value/ OL_value)",
        "info": "",
        "x": 630,
        "y": 660,
        "wires": []
    },
    {
        "id": "daa34bb6ced9edda",
        "type": "comment",
        "z": "4acf5ea72f144f4b",
        "name": "Temperature (IT_value/ OT_value)",
        "info": "",
        "x": 660,
        "y": 180,
        "wires": []
    },
    {
        "id": "ea2abadee465fd28",
        "type": "comment",
        "z": "4acf5ea72f144f4b",
        "name": "Humidity (value)",
        "info": "",
        "x": 600,
        "y": 1040,
        "wires": []
    },
    {
        "id": "0c8d25d7067523a5",
        "type": "influxdb out",
        "z": "4acf5ea72f144f4b",
        "influxdb": "ec0239a13d7cba62",
        "name": "Water Level Write",
        "measurement": "waterLevel",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "test",
        "x": 1430,
        "y": 1340,
        "wires": []
    },
    {
        "id": "6b6ce93d1da1330a",
        "type": "change",
        "z": "4acf5ea72f144f4b",
        "name": "Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.tank",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 1340,
        "wires": [
            [
                "0c8d25d7067523a5"
            ]
        ]
    },
    {
        "id": "406f7a4e053a5865",
        "type": "function",
        "z": "4acf5ea72f144f4b",
        "name": "Convert to Float",
        "func": "msg.value = parseFloat(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1360,
        "wires": [
            [
                "6b6ce93d1da1330a"
            ]
        ]
    },
    {
        "id": "5241848f10719d90",
        "type": "comment",
        "z": "4acf5ea72f144f4b",
        "name": "Water Level (value)",
        "info": "",
        "x": 610,
        "y": 1280,
        "wires": []
    },
    {
        "id": "d71c70a3b69686d8",
        "type": "influxdb out",
        "z": "4acf5ea72f144f4b",
        "influxdb": "ec0239a13d7cba62",
        "name": "Moisture Write",
        "measurement": "moisture",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "test",
        "x": 1420,
        "y": 1580,
        "wires": []
    },
    {
        "id": "de4c0c0b3365dea4",
        "type": "change",
        "z": "4acf5ea72f144f4b",
        "name": "Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.soil",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 1580,
        "wires": [
            [
                "d71c70a3b69686d8"
            ]
        ]
    },
    {
        "id": "257ce0ef507f08a9",
        "type": "comment",
        "z": "4acf5ea72f144f4b",
        "name": "Soil Moisture (value)",
        "info": "",
        "x": 610,
        "y": 1520,
        "wires": []
    },
    {
        "id": "f3e9a2cca45b1917",
        "type": "function",
        "z": "4acf5ea72f144f4b",
        "name": "Convert to Int",
        "func": "msg.value = parseInt(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1600,
        "wires": [
            [
                "de4c0c0b3365dea4"
            ]
        ]
    },
    {
        "id": "fe45da32247bdc93",
        "type": "function",
        "z": "4acf5ea72f144f4b",
        "name": "Convert to Int",
        "func": "msg.value = parseInt(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1120,
        "wires": [
            [
                "2f1831aefa05c7c2"
            ]
        ]
    },
    {
        "id": "53bf8dfc6355605c",
        "type": "inject",
        "z": "4acf5ea72f144f4b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "IT_330",
        "payloadType": "str",
        "x": 570,
        "y": 2180,
        "wires": [
            [
                "279535bfde742983"
            ]
        ]
    },
    {
        "id": "279535bfde742983",
        "type": "function",
        "z": "4acf5ea72f144f4b",
        "name": "",
        "func": "let input = msg.payload.split(\"_\");\nmsg.type = input[0];\nmsg.value = input[1];\nconsole.log(msg.type);\n\n// sidebar.debug(\"Log message\");\nnode.warn([\"your_variable=\"]);\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d02a45f17460a8e9",
        "type": "comment",
        "z": "4acf5ea72f144f4b",
        "name": "test",
        "info": "",
        "x": 570,
        "y": 2120,
        "wires": []
    },
    {
        "id": "13ae202162aabde3",
        "type": "mqtt out",
        "z": "4acf5ea72f144f4b",
        "name": "",
        "topic": "esp32/valve",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6c38adbc301341f7",
        "x": 910,
        "y": 2420,
        "wires": []
    },
    {
        "id": "fdda8dac7bbad01b",
        "type": "mqtt out",
        "z": "4acf5ea72f144f4b",
        "name": "",
        "topic": "esp32/Fan",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6c38adbc301341f7",
        "x": 1150,
        "y": 2780,
        "wires": []
    },
    {
        "id": "2d596e32a46ebd32",
        "type": "function",
        "z": "4acf5ea72f144f4b",
        "name": "Create message",
        "func": "msg.type = \"HOT\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2740,
        "wires": [
            [
                "fdda8dac7bbad01b"
            ]
        ]
    },
    {
        "id": "3c964f0778424519",
        "type": "function",
        "z": "4acf5ea72f144f4b",
        "name": "Create message",
        "func": "msg.type = \"COLD\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2820,
        "wires": [
            [
                "fdda8dac7bbad01b"
            ]
        ]
    },
    {
        "id": "3c11c506e9fa50b3",
        "type": "comment",
        "z": "4acf5ea72f144f4b",
        "name": "Control Fans",
        "info": "",
        "x": 590,
        "y": 2660,
        "wires": []
    },
    {
        "id": "0b68e8c5811c8212",
        "type": "mqtt out",
        "z": "4acf5ea72f144f4b",
        "name": "",
        "topic": "esp32/shutter",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6c38adbc301341f7",
        "x": 920,
        "y": 2580,
        "wires": []
    },
    {
        "id": "65567971042c2804",
        "type": "comment",
        "z": "4acf5ea72f144f4b",
        "name": "Control Shutter",
        "info": "",
        "x": 600,
        "y": 2500,
        "wires": []
    },
    {
        "id": "0c0f44fdd9800e91",
        "type": "comment",
        "z": "4acf5ea72f144f4b",
        "name": "Control Water Valve",
        "info": "",
        "x": 610,
        "y": 2340,
        "wires": []
    },
    {
        "id": "7ee51638e84bfa58",
        "type": "comment",
        "z": "4acf5ea72f144f4b",
        "name": "Transmit Section",
        "info": "",
        "x": 420,
        "y": 2020,
        "wires": []
    },
    {
        "id": "0343b1715e2b4105",
        "type": "comment",
        "z": "4acf5ea72f144f4b",
        "name": "Recieve Section",
        "info": "",
        "x": 420,
        "y": 100,
        "wires": []
    },
    {
        "id": "c8d5438c01bfc419",
        "type": "mqtt in",
        "z": "4acf5ea72f144f4b",
        "name": "",
        "topic": "esp32/events",
        "qos": "2",
        "datatype": "auto",
        "broker": "6c38adbc301341f7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 590,
        "y": 1940,
        "wires": [
            [
                "b95ee6eccd432ae3"
            ]
        ]
    },
    {
        "id": "369eaf8098fa6e13",
        "type": "influxdb out",
        "z": "4acf5ea72f144f4b",
        "influxdb": "ec0239a13d7cba62",
        "name": "Irrigation Event Write",
        "measurement": "irrigation",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "test",
        "x": 1720,
        "y": 1840,
        "wires": []
    },
    {
        "id": "9df1228b5a9ee62d",
        "type": "change",
        "z": "4acf5ea72f144f4b",
        "name": "Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.state",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 1840,
        "wires": [
            [
                "369eaf8098fa6e13"
            ]
        ]
    },
    {
        "id": "2208c839b1009f7f",
        "type": "comment",
        "z": "4acf5ea72f144f4b",
        "name": "Events",
        "info": "",
        "x": 570,
        "y": 1760,
        "wires": []
    },
    {
        "id": "b95ee6eccd432ae3",
        "type": "switch",
        "z": "4acf5ea72f144f4b",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Irrigation",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "No-Irrigation",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Cooling",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Heating",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "No-AC",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Moving_to_the_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Moving_to_the_Middle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Moving_to_the_End",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Still_at_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Still_at_Middle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Still_at_End",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Tank_Filling",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Tank_Stop_Filling",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 13,
        "x": 890,
        "y": 1940,
        "wires": [
            [
                "1543863b661a0e5f",
                "3c0a53f3fee73cc8"
            ],
            [
                "1543863b661a0e5f",
                "3c0a53f3fee73cc8"
            ],
            [
                "7c2f87a4c644713f",
                "c575ef722dce5570"
            ],
            [
                "7c2f87a4c644713f",
                "c575ef722dce5570"
            ],
            [
                "7c2f87a4c644713f",
                "c575ef722dce5570"
            ],
            [
                "1b047c295a8b2281",
                "54f3665ac7b61e47"
            ],
            [
                "1b047c295a8b2281",
                "54f3665ac7b61e47"
            ],
            [
                "1b047c295a8b2281",
                "54f3665ac7b61e47"
            ],
            [
                "1b047c295a8b2281",
                "54f3665ac7b61e47"
            ],
            [
                "1b047c295a8b2281",
                "54f3665ac7b61e47"
            ],
            [
                "1b047c295a8b2281",
                "54f3665ac7b61e47"
            ],
            [
                "6461adc5ea06fa89",
                "e8002246c5405079"
            ],
            [
                "6461adc5ea06fa89",
                "e8002246c5405079"
            ]
        ]
    },
    {
        "id": "1543863b661a0e5f",
        "type": "function",
        "z": "4acf5ea72f144f4b",
        "name": "Irrigation values added (0/1)",
        "func": "if(msg.payload == \"IRRIGATION\"){\n    msg.value = 1;\n    msg.dpMessage = \"Irrigation ON\";\n}else{\n    msg.value = 0;\n    msg.dpMessage = \"Irrigation OFF\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1840,
        "wires": [
            [
                "9df1228b5a9ee62d"
            ]
        ]
    },
    {
        "id": "7c2f87a4c644713f",
        "type": "function",
        "z": "4acf5ea72f144f4b",
        "name": "Air Conditioning values (0/1/2)",
        "func": "if(msg.payload == \"No-AC\"){\n    msg.value = 0;\n    msg.dpMessage = \"No Air Conditioning\";\n}else if (msg.payload == \"COOLING\"){\n    msg.value = 1;\n    msg.dpMessage = \"Cold Air Conditioning\";    \n}else{\n    msg.value = 2;\n    msg.dpMessage = \"HOT Air Conditioning\";    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1920,
        "wires": [
            [
                "fa35a7261b6b065b"
            ]
        ]
    },
    {
        "id": "25a8958af85d45a8",
        "type": "influxdb out",
        "z": "4acf5ea72f144f4b",
        "influxdb": "ec0239a13d7cba62",
        "name": "Air conditioning Event Write",
        "measurement": "airConditioning",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "test",
        "x": 1740,
        "y": 1920,
        "wires": []
    },
    {
        "id": "fa35a7261b6b065b",
        "type": "change",
        "z": "4acf5ea72f144f4b",
        "name": "Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.type",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 1920,
        "wires": [
            [
                "25a8958af85d45a8"
            ]
        ]
    },
    {
        "id": "3c0a53f3fee73cc8",
        "type": "ui_text",
        "z": "4acf5ea72f144f4b",
        "group": "d8807c8f558ef194",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Irrigation State",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1160,
        "y": 1800,
        "wires": []
    },
    {
        "id": "c575ef722dce5570",
        "type": "ui_text",
        "z": "4acf5ea72f144f4b",
        "group": "d8807c8f558ef194",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Air Condition State",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1170,
        "y": 1880,
        "wires": []
    },
    {
        "id": "bd6e62d8c41c8359",
        "type": "ui_text",
        "z": "4acf5ea72f144f4b",
        "group": "5407e25db07d8203",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Internal Humidity ",
        "format": "{{msg.payload + \" %\"}}",
        "layout": "row-spread",
        "className": "humidity",
        "x": 930,
        "y": 1160,
        "wires": []
    },
    {
        "id": "1a5159c29b87eff3",
        "type": "ui_text",
        "z": "4acf5ea72f144f4b",
        "group": "5407e25db07d8203",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Water Level (ml)",
        "format": "{{msg.payload + \" ml\"}}",
        "layout": "row-spread",
        "className": "tank",
        "x": 920,
        "y": 1400,
        "wires": []
    },
    {
        "id": "7382c6189c5b2441",
        "type": "ui_text",
        "z": "4acf5ea72f144f4b",
        "group": "5407e25db07d8203",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Soil Moisture (%)",
        "format": "{{msg.payload + \" %\"}}",
        "layout": "row-spread",
        "className": "soil",
        "x": 930,
        "y": 1640,
        "wires": []
    },
    {
        "id": "1b047c295a8b2281",
        "type": "function",
        "z": "4acf5ea72f144f4b",
        "name": "Shutter (0/1/2)",
        "func": "/*\n(Moves)\nM_S (Fully open)\nM_M (Partially open)\nM_E (Fully close)\n\n(Stoped)\nS_S (Fully open)\nS_M (Partially open)\nS_E (Fully close)\n*/\n\nlet splittedMessage = msg.payload.split(\"_\");\n\nif (splittedMessage[0] == \"M\"){\n    msg.display = \"Moves in order to be\"; \n}else{\n    msg.display = \"Still \";\n}\n\nif(splittedMessage[1] == \"S\"){\n    msg.display = msg.display + \"fully open\";\n    msg.value = 2;\n}else if(splittedMessage[1] == \"M\"){\n    msg.display = msg.display + \"partially open\";\n    msg.position = 1;\n}else{\n    msg.display = msg.display + \"closed\";\n    msg.position = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1960,
        "wires": [
            [
                "355a4166e1c9b87b"
            ]
        ]
    },
    {
        "id": "6461adc5ea06fa89",
        "type": "function",
        "z": "4acf5ea72f144f4b",
        "name": "Tank (0/1)",
        "func": "/*\nT_F (Tank Filling)\nT_NF (Tank Filling Stopped)\n*/\n\nif(msg.payload == \"T_F\"){\n    msg.display = \"Tank Filling\";\n    msg.value = 1;\n}else{\n    msg.display = \"Tank Filling Stopped\";\n    msg.value = 0;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 2040,
        "wires": [
            [
                "abe71265de5c9490"
            ]
        ]
    },
    {
        "id": "54f3665ac7b61e47",
        "type": "ui_text",
        "z": "4acf5ea72f144f4b",
        "group": "d8807c8f558ef194",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Shutter State",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1150,
        "y": 2000,
        "wires": []
    },
    {
        "id": "355a4166e1c9b87b",
        "type": "change",
        "z": "4acf5ea72f144f4b",
        "name": "Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.state",
                "pt": "msg",
                "to": "position",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 1960,
        "wires": [
            [
                "9dd677f29556738e"
            ]
        ]
    },
    {
        "id": "abe71265de5c9490",
        "type": "change",
        "z": "4acf5ea72f144f4b",
        "name": "Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.state",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 2040,
        "wires": [
            [
                "308035348e7bfb5f"
            ]
        ]
    },
    {
        "id": "e8002246c5405079",
        "type": "ui_text",
        "z": "4acf5ea72f144f4b",
        "group": "d8807c8f558ef194",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Tank State",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1150,
        "y": 2080,
        "wires": []
    },
    {
        "id": "9dd677f29556738e",
        "type": "influxdb out",
        "z": "4acf5ea72f144f4b",
        "influxdb": "ec0239a13d7cba62",
        "name": "Shutter State Event Write",
        "measurement": "Shutter",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "test",
        "x": 1730,
        "y": 1960,
        "wires": []
    },
    {
        "id": "308035348e7bfb5f",
        "type": "influxdb out",
        "z": "4acf5ea72f144f4b",
        "influxdb": "ec0239a13d7cba62",
        "name": "Tank State Event Write",
        "measurement": "tankFilling",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "test",
        "x": 1720,
        "y": 2040,
        "wires": []
    },
    {
        "id": "0330c17cc6419bf1",
        "type": "ui_switch",
        "z": "4acf5ea72f144f4b",
        "name": "",
        "label": "Cold Fan (OFF/ON)",
        "tooltip": "",
        "group": "d8807c8f558ef194",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "state",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 610,
        "y": 2820,
        "wires": [
            [
                "3c964f0778424519"
            ]
        ]
    },
    {
        "id": "d7dcd6dbeb33f1f9",
        "type": "ui_switch",
        "z": "4acf5ea72f144f4b",
        "name": "",
        "label": "Hot Fan (OFF/ON)",
        "tooltip": "",
        "group": "d8807c8f558ef194",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "state",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 610,
        "y": 2740,
        "wires": [
            [
                "2d596e32a46ebd32"
            ]
        ]
    },
    {
        "id": "04ef33a67037b635",
        "type": "ui_slider",
        "z": "4acf5ea72f144f4b",
        "name": "",
        "label": "Shutter Position",
        "tooltip": "",
        "group": "d8807c8f558ef194",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "position",
        "topicType": "msg",
        "min": 0,
        "max": "2",
        "step": 1,
        "className": "",
        "x": 600,
        "y": 2580,
        "wires": [
            [
                "0b68e8c5811c8212"
            ]
        ],
        "info": " (0: Open - 1: Center - 2: Close) "
    },
    {
        "id": "693af1129c01ed99",
        "type": "ui_switch",
        "z": "4acf5ea72f144f4b",
        "name": "",
        "label": "Water Valve (OFF/ON)",
        "tooltip": "",
        "group": "d8807c8f558ef194",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 620,
        "y": 2420,
        "wires": [
            [
                "13ae202162aabde3"
            ]
        ]
    },
    {
        "id": "3300b07fe85ea018",
        "type": "ui_template",
        "z": "4acf5ea72f144f4b",
        "group": "d8807c8f558ef194",
        "name": "",
        "order": 10,
        "width": 0,
        "height": 0,
        "format": "<style>\n.nr-dashboard-cardtitle{\n    text-align: center;\n    text-decoration: underline;\n    font-size: 30px !important;\n    font-weight: bold !important;\n}\n.mTitle{\n    text-decoration: underline;\n    font-size: 30px !important;\n    font-weight: bold !important;\n    color: #1bbfff;\n}\n\n.temp{\n    background-color: #c3eeff !important;\n}\n\n.light{\n    \n}\n\n.humidity{\n    background-color: #c3eeff !important;\n}\n\n.tank{\n    \n}\n\n.soil{\n    background-color: #c3eeff !important;\n}\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 180,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "7e5797c67111d229",
        "type": "ui_text",
        "z": "4acf5ea72f144f4b",
        "group": "d8807c8f558ef194",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "<p class=\"mTitle\">Events</p>",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 790,
        "y": 1760,
        "wires": []
    },
    {
        "id": "5a5857d2a66169fd",
        "type": "change",
        "z": "4acf5ea72f144f4b",
        "name": "External Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.external",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 440,
        "wires": [
            [
                "057875206e73669e"
            ]
        ]
    },
    {
        "id": "f5bd7dbf3e835dd8",
        "type": "function",
        "z": "4acf5ea72f144f4b",
        "name": "Convert To Float ",
        "func": "// IT_30\n// OT_27\nnode.warn([\"incoming message temp\"]);\nnode.warn([msg.payload]);\nmsg.value = parseFloat(msg.payload);\nnode.warn([\"Converted to Float\"]);\nnode.warn([msg.value]);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 460,
        "wires": [
            [
                "5a5857d2a66169fd"
            ]
        ]
    },
    {
        "id": "2b59efe99c1fb1a8",
        "type": "mqtt in",
        "z": "4acf5ea72f144f4b",
        "name": "",
        "topic": "esp32/temperatureOUT",
        "qos": "2",
        "datatype": "auto",
        "broker": "6c38adbc301341f7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 620,
        "y": 460,
        "wires": [
            [
                "f5bd7dbf3e835dd8",
                "5e2bf2eddd1eb909"
            ]
        ]
    },
    {
        "id": "5e2bf2eddd1eb909",
        "type": "ui_text",
        "z": "4acf5ea72f144f4b",
        "group": "5407e25db07d8203",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "External Temperature (C)",
        "format": "{{msg.payload + \" °C\"}}",
        "layout": "row-spread",
        "className": "temp",
        "x": 950,
        "y": 500,
        "wires": []
    },
    {
        "id": "057875206e73669e",
        "type": "influxdb out",
        "z": "4acf5ea72f144f4b",
        "influxdb": "ec0239a13d7cba62",
        "name": "Temperature Out Write",
        "measurement": "temperature",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "test",
        "x": 1440,
        "y": 440,
        "wires": []
    },
    {
        "id": "bbe24cf945573b6c",
        "type": "change",
        "z": "4acf5ea72f144f4b",
        "name": "Internal Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.internal",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 240,
        "wires": [
            [
                "386e8c04686b24cf"
            ]
        ]
    },
    {
        "id": "240848d34a0f337d",
        "type": "function",
        "z": "4acf5ea72f144f4b",
        "name": "Convert To Float",
        "func": "// IT_30\n// OT_27\nnode.warn([\"incoming message temp\"]);\nnode.warn([msg.payload]);\n\nmsg.value = parseFloat(msg.payload);\n\nnode.warn([\"Converted to Float\"]);\nnode.warn([msg.value]);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 260,
        "wires": [
            [
                "bbe24cf945573b6c"
            ]
        ]
    },
    {
        "id": "64db3ffd0ac84cbb",
        "type": "mqtt in",
        "z": "4acf5ea72f144f4b",
        "name": "",
        "topic": "esp32/temperatureIN",
        "qos": "2",
        "datatype": "auto",
        "broker": "6c38adbc301341f7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 620,
        "y": 260,
        "wires": [
            [
                "240848d34a0f337d",
                "328995173985ce1e"
            ]
        ]
    },
    {
        "id": "386e8c04686b24cf",
        "type": "influxdb out",
        "z": "4acf5ea72f144f4b",
        "influxdb": "ec0239a13d7cba62",
        "name": "Temperature In Write",
        "measurement": "temperature",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "test",
        "x": 1440,
        "y": 240,
        "wires": []
    },
    {
        "id": "328995173985ce1e",
        "type": "ui_text",
        "z": "4acf5ea72f144f4b",
        "group": "5407e25db07d8203",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Internal Temperature (C)",
        "format": "{{msg.payload + \" °C\"}}",
        "layout": "row-spread",
        "className": "temp",
        "x": 950,
        "y": 300,
        "wires": []
    },
    {
        "id": "6e97dae6f8e701a2",
        "type": "change",
        "z": "4acf5ea72f144f4b",
        "name": "External Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.external",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 920,
        "wires": [
            [
                "4c14fc341f9f6ed0"
            ]
        ]
    },
    {
        "id": "63a80c6f596fbd8e",
        "type": "function",
        "z": "4acf5ea72f144f4b",
        "name": "Convert To Int ",
        "func": "// IT_30\n// OT_27\nnode.warn([\"incoming message light\"]);\nnode.warn([msg.payload]);\nmsg.value = parseInt(msg.payload);\nnode.warn([\"Converted to Float\"]);\nnode.warn([msg.value]);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 940,
        "wires": [
            [
                "6e97dae6f8e701a2"
            ]
        ]
    },
    {
        "id": "844d5f1e95587cad",
        "type": "mqtt in",
        "z": "4acf5ea72f144f4b",
        "name": "",
        "topic": "esp32/lightOUT",
        "qos": "2",
        "datatype": "auto",
        "broker": "6c38adbc301341f7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 600,
        "y": 940,
        "wires": [
            [
                "63a80c6f596fbd8e",
                "d7c24854a37f8882"
            ]
        ]
    },
    {
        "id": "d7c24854a37f8882",
        "type": "ui_text",
        "z": "4acf5ea72f144f4b",
        "group": "5407e25db07d8203",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "External  Light Intensity ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "light",
        "x": 940,
        "y": 980,
        "wires": []
    },
    {
        "id": "4c14fc341f9f6ed0",
        "type": "influxdb out",
        "z": "4acf5ea72f144f4b",
        "influxdb": "ec0239a13d7cba62",
        "name": "Light Out Write",
        "measurement": "light",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "test",
        "x": 1420,
        "y": 920,
        "wires": []
    },
    {
        "id": "c68dafd53fa38a2e",
        "type": "change",
        "z": "4acf5ea72f144f4b",
        "name": "Internal Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.internal",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 720,
        "wires": [
            [
                "bc9ab8635162601e"
            ]
        ]
    },
    {
        "id": "51852263618dd7cd",
        "type": "function",
        "z": "4acf5ea72f144f4b",
        "name": "Convert To Int ",
        "func": "// IT_30\n// OT_27\nnode.warn([\"incoming message light\"]);\nnode.warn([msg.payload]);\n\nmsg.value = parseInt(msg.payload);\n\nnode.warn([\"Converted to Int\"]);\nnode.warn([msg.value]);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 740,
        "wires": [
            [
                "c68dafd53fa38a2e"
            ]
        ]
    },
    {
        "id": "60dedc6c19e816e1",
        "type": "mqtt in",
        "z": "4acf5ea72f144f4b",
        "name": "",
        "topic": "esp32/lightIN",
        "qos": "2",
        "datatype": "auto",
        "broker": "6c38adbc301341f7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 590,
        "y": 740,
        "wires": [
            [
                "51852263618dd7cd",
                "9921e279f1614c76"
            ]
        ]
    },
    {
        "id": "bc9ab8635162601e",
        "type": "influxdb out",
        "z": "4acf5ea72f144f4b",
        "influxdb": "ec0239a13d7cba62",
        "name": "Light In Write",
        "measurement": "light",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IOT",
        "bucket": "test",
        "x": 1410,
        "y": 720,
        "wires": []
    },
    {
        "id": "9921e279f1614c76",
        "type": "ui_text",
        "z": "4acf5ea72f144f4b",
        "group": "5407e25db07d8203",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Internal Light Intensity",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "light",
        "x": 940,
        "y": 780,
        "wires": []
    },
    {
        "id": "6c38adbc301341f7",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ec0239a13d7cba62",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "IOT_DB",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://influxdb:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "d8807c8f558ef194",
        "type": "ui_group",
        "name": "Controls",
        "tab": "89d4041f7249bf8c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ".nr-dashboard-cardtitle {   background-color: black; }"
    },
    {
        "id": "5407e25db07d8203",
        "type": "ui_group",
        "name": "Metrics",
        "tab": "89d4041f7249bf8c",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "89d4041f7249bf8c",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]